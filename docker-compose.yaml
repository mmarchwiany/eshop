version: "2"
services:
  app:
    container_name: app
    restart: always
    build: app    
    volumes:
      - ./app:/usr/src/app
    working_dir: /usr/src/app
    ports:
      - "${APP_PORT}:${APP_PORT}"
    environment:
      APP_DATABASE_URL: ${APP_DATABASE_URL}
      APP_PORT: ${APP_PORT}
      S3_KEY: ${S3_KEY}
      S3_SECRET: ${S3_SECRET}
    links:
      - mongo
    command: '/bin/bash -c "crontab /usr/src/app/config/crontab && npm install nodemon -g --save && npm i --save-dev && npm run dev"'
  web:
    container_name: web
    restart: always
    build: web
    working_dir: /usr/src/app
    volumes:
      - ./web:/usr/src/app
    ports:
      - "${WEB_PORT}:${WEB_PORT}"
    environment:
      WEB_PORT: ${WEB_PORT}
    command: "/bin/bash -c 'npm i --save-dev && npm install serve -g --save && if [ $ENV = \"production\" ] ; then npm run build && npm run prod; else npm run start; fi'"
  mongo:
    container_name: mongo
    image: mongo
    volumes:
      - ./data:/data/db
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: eshop